# This is the one I'm actively developing :)
lang en_US
keyboard us

# I want this timezone over UTC :)
timezone America/Denver

# Configure the default Vagrant root password
rootpw $1$jig1YnE7$k3lGlH1H7QOpnEsciIhYs. --iscrypted
#platform x86, AMD64, or Intel EM64T

# Command to run when the build is done
# poweroff --eject
reboot --eject

# Use the local repo on the DVD for installing packages
repo --name="AppStream" --baseurl=file:///run/install/repo/AppStream

# Install from the first Optical drive on the system
cdrom

# Install the bootloader into the Master Boot Record, Don't know what the other
# options do, they don't appear to be documented but appear in most other
# examples.
bootloader --location=mbr --append="rhgb quiet crashkernel=auto"

# Any invalid partion tables found on disks are intialized.
zerombr

# Remove partitions from the system, prior to creation of new partitions
clearpart --all --initlabel

# Automatically creates /, a swap partion, and an appropriate boot partition
# for the architecture.
autopart

# Use SHA512 hash, Use Shadow passwords
auth --passalgo=sha512 --useshadow

# Enable SELinux with the default targeted policy
selinux --enforcing

# Set the network to use DHCP, turn on the network, Disable IPV6 and set the
# hostname.
network  --bootproto=dhcp --device=eth0 --activate --noipv6 --hostname="RHEL8"

# Enable the firewall, and allow SSH and HTTP traffic.
firewall --enabled --ssh --http
# firewall --disabled

# Don't configure X.
skipx

# Do not start firstboot... not sure what that is :)
firstboot --disable

# System services, start the NTP service
services --enabled="chronyd"

# Configure a Vagrant user with the default password, and allowed to use sudo
user --groups=wheel --name=vagrant --password=$6$YACTK2qsfakYO9Ft$VHeOzT8YueAJzc/SoumfCVQxf5dKIe5S1hqI64XM.7vcknAg8iNGt6aCYmfnyeI8NiT3SkjSKCa7izvwc3VY01 --iscrypted --gecos="vagrant"

# Security password policies.
%anaconda
pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty
%end

%post --log=/root/ks-post.log
# Download and install the vagrant public key as an authorized key for the
# vagrant user.
mkdir /home/vagrant/.ssh
chmod 700 /home/vagrant/.ssh
chown vagrant:vagrant home/vagrant/.ssh
curl -o /root/vagrant.pub "https://raw.githubusercontent.com/hashicorp/vagrant/master/keys/vagrant.pub"
cat /root/vagrant.pub >> /home/vagrant/.ssh/authorized_keys
chmod 600 /home/vagrant/.ssh/authorized_keys
chown vagrant:vagrant /home/vagrant/.ssh/authorized_keys

# Configure vagrant with password-less sudo
chmod 640 /etc/sudoers
echo "vagrant ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
chmod 440 /etc/sudoers

# Configure SSH Tweaks.  This should speed up ssh on guests that do not have
# internet access.
echo "UseDNS no" >> /etc/ssh/sshd_config
%end

# Packages to install when building the server.
%packages
# @^graphical-server-environment
# @container-management
# @debugging
@development
# @dotnet-core
# @file-server
# @ftp-server
# @graphical-admin-tools
# @guest-agents
# @headless-management
# @infiniband
# @legacy-unix
# @mail-server
# @network-file-system-client
# @network-server
# @performance
# @remote-desktop-clients
# @remote-system-management
# @rpm-development-tools
# @scientific
# @security-tools
# @smart-card
# @smb-server
@system-tools
# @virtualization-client
# @virtualization-hypervisor
# @virtualization-tools
# @web-server
# kexec-tools
@standard
%end

# Configure the kdump kernel crash dumping mechanism
%addon com_redhat_kdump --enable --reserve-mb='auto'
%end
